#include <stm32f031x6.h>
#include "display.h"

void initClock(void);
void initSysTick(void);
void SysTick_Handler(void);
void delay(volatile uint32_t dly);
void setupIO();
int isInside(uint16_t x1, uint16_t y1, uint16_t w, uint16_t h, uint16_t px, uint16_t py);
void enablePullUp(GPIO_TypeDef *Port, uint32_t BitNumber);
void pinMode(GPIO_TypeDef *Port, uint32_t BitNumber, uint32_t Mode);

#define Screen_Width 128
#define Screen_Height 160

volatile uint32_t milliseconds;


const uint16_t deco3[]= 
{
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,4,4,4,4,0,0,0,0,0,0,0,4,4,4,4,4,4,0,0,0,0,7936,7936,4,4,4,4,4,4,7936,7936,0,0,65535,65535,4,4,4,4,4,4,65535,65535,0,0,7936,7936,4,4,4,4,4,4,7936,7936,0,0,0,0,0,4,4,4,4,0,0,0,0,0,0,0,0,0,24327,24327,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
};
const uint16_t Goal[]=
{
    65535,65535,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65535,65535,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65535,65535,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65535,65535,65535,65535,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65535,65535,65535,65535,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65535,65535,65535,65535,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65535,65535,65535,65535,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,65535,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65535,65535,65535,65535,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65535,65535,65535,65535,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65535,65535,65535,65535,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65535,65535,65535,65535,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65535,65535,65535,65535,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65535,65535,65535,65535,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65535,65535,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
};
const uint16_t DEFENDER[]=
{
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12820,12820,12820,12820,12820,12820,0,0,0,0,0,0,0,0,0,0,0,0,0,12820,12820,12820,12820,12820,12820,12820,0,0,0,0,0,0,0,0,0,0,0,0,0,12820,12820,12820,12820,21306,21306,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12820,12820,12820,21306,21306,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12820,21306,21306,21306,21306,21306,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21306,21306,21306,21306,4912,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21306,21306,21306,21306,21306,0,0,0,0,0,0,0,0,0,0,0,0,4912,4912,4912,40224,40224,4912,4912,4912,4912,4912,4912,0,0,0,0,0,0,0,0,0,40224,40224,4912,40224,40224,4912,65535,65535,4912,40224,40224,0,0,0,0,0,0,0,0,0,21306,21306,4912,40224,40224,4912,65535,65535,4912,21306,21306,0,0,0,0,0,0,0,0,0,21306,21306,4912,40224,40224,4912,4912,4912,4912,21306,21306,0,0,0,0,0,0,0,0,0,0,0,4912,40224,40224,4912,4912,4912,4912,0,0,0,0,0,0,0,0,0,0,0,0,0,4912,40224,40224,4912,4912,4912,40224,0,0,0,0,0,0,0,0,0,0,0,0,0,4912,40224,40224,4912,4912,40224,40224,0,0,0,0,0,0,0,0,0,0,0,0,0,65535,65535,0,0,0,65535,65535,0,0,0,0,0,0,0,0,0,0,0,0,0,65535,65535,0,0,0,65535,65535,0,0,0,0,0,0,0,0,0,0,0,0,0,50585,50585,0,0,0,50585,50585,0,0,0,0,0,0,0,0,0,0,0,0,0,50585,50585,50585,0,0,50585,50585,50585,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
};
const uint16_t ATTACKER[]=
{
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21306,21306,21306,21306,21306,0,0,0,0,0,0,0,0,0,0,0,0,0,21306,21306,21306,21306,21306,21306,21306,0,0,0,0,0,0,0,0,0,0,0,0,0,21306,21306,21306,21306,40607,40607,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21306,40607,21306,40607,40607,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21306,40607,40607,40607,40607,40607,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40607,40607,40607,4912,4912,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40607,40607,40607,40607,40607,0,0,0,0,0,0,0,0,0,0,0,0,50585,50585,50585,43507,43507,50585,50585,50585,50585,50585,50585,0,0,0,0,0,0,0,0,0,43507,43507,50585,43507,43507,50585,0,0,50585,43507,43507,0,0,0,0,0,0,0,0,0,40607,40607,50585,43507,43507,50585,0,0,50585,40607,40607,0,65535,65535,65535,0,0,0,0,0,7310,40607,50585,43507,43507,50585,50585,50585,50585,40607,7310,65535,65535,0,65535,0,0,0,0,0,0,0,50585,43507,43507,50585,50585,50585,50585,0,65535,65535,0,65535,65535,0,0,0,0,0,0,0,50585,43507,43507,50585,50585,43507,50585,0,65535,0,65535,65535,0,0,0,0,0,0,0,0,50585,43507,43507,50585,50585,43507,43507,0,65535,65535,65535,0,0,0,0,0,0,0,0,0,65535,65535,0,0,0,65535,65535,0,0,0,0,0,0,0,0,0,0,0,0,0,65535,65535,0,0,0,65535,65535,0,0,0,0,0,0,0,0,0,0,0,0,0,57091,57091,0,0,0,57091,57091,0,0,0,0,0,0,0,0,0,0,0,0,0,57091,57091,57091,0,0,57091,57091,57091,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
};
const uint16_t TROPHY[]=
{

};

int main()
{
    uint16_t x = 50;
    uint16_t y = 150 -16;
    uint16_t oldx = x;
    uint16_t oldy = y;
    uint16_t defenderX = 0;
    uint16_t originalX = 50;
    uint16_t originalY = 150 - 16; 
    uint16_t goalX = x; 
    uint16_t goalY = 0; 
    initClock();
    initSysTick();
    setupIO();
    fillRectangle(0, 0, Screen_Width, Screen_Height, 0);

    // Display the startup screen for 5 seconds
    printTextX2("Score a", 5, 60, RGBToWord(255, 255, 255), 0);
    printTextX2("Try to Win", 5, 90, RGBToWord(255, 255, 255), 0);
    printTextX2("The Game", 5, 120, RGBToWord(255, 255, 255), 0);
    delay(5000);

    // Clear the screen after 5 seconds
    fillRectangle(0, 0, Screen_Width, Screen_Height, 0);
   
    putImage(x,0,20,20,Goal,0,0);
    putImage(x, y, 20, 20, ATTACKER, 0, 0);
    drawRectangle(0, Screen_Height - 132 , Screen_Width, 1, RGBToWord(0xff, 0xff, 0xff));

    int defenderDirection = 1;
    int distanceMoved = 0;

        while (1) {
        int x_movement = 0;
        int y_movement = 0;

        if ((GPIOB->IDR & (1 << 4)) == 0) // right pressed
        {
            if (x < 110) {
                x++;
                x_movement = 1;
            }
        }
        if ((GPIOB->IDR & (1 << 5)) == 0) // left pressed
        {
            if (x > 10) {
                x--;
                x_movement = 1;
            }
        }
        if ((GPIOA->IDR & (1 << 11)) == 0) // down pressed
        {
            if (y < 140) {
                y++;
                y_movement = 1;
            }
        }
        if ((GPIOA->IDR & (1 << 8)) == 0) // up pressed
        {
            if (y > 16) {
                y--;
                y_movement = 1;
            }
        }
        if (isInside(defenderX, Screen_Height / 2, 20, 20, x, y)) 
        {
        // Clear the entire screen
        fillRectangle(0, 0, Screen_Width, Screen_Height, 0);

        // Print "You Lose" at the specified position
        printTextX2("You Lose", 10, 80, RGBToWord(255, 0, 0), 0);

        // Introduce a delay for the message to be visible (adjust as needed)
        delay(2000); 

       
        // Reset the attacker to the original position
        x = originalX;
        y = originalY;

        fillRectangle(80, 140, 100, 30, 0);
        putImage(x, 0, 20, 20, Goal, 0, 0);
        drawRectangle(0, Screen_Height - 132, Screen_Width, 1, RGBToWord(0xff, 0xff, 0xff));
        // Continue to the next iteration of the game loop
        continue;
    }
        if (x_movement || y_movement) {
            fillRectangle(oldx, oldy, 12, 16, 0);
            oldx = x;
            oldy = y;

            putImage(x, y, 20, 20, ATTACKER, 0, 0);
        }
        if (isInside(0, Screen_Height - 132, Screen_Width, 1, x, y)) 
        {
        fillRectangle(0, 0, Screen_Width, Screen_Height, 0);

        // Print "You Win" at the specified position
        putImage(30, 30, 60, 60, TROPHY, 0, 0);
        printTextX2("YOU WIN", 10, 100, RGBToWord(0, 255, 0), 0);

        // Introduce a delay for the message to be visible (adjust as needed)
        delay(2000);

        // Clear only the "You Win" message and trophy
        fillRectangle(0, 0, Screen_Width, Screen_Height, 0);

        // Reset the attacker to the original position
        putImage(goalX, goalY, 20, 20, Goal, 0, 0);
        drawRectangle(0, Screen_Height - 132, Screen_Width, 1, RGBToWord(0xff, 0xff, 0xff));

        // Reset the attacker to the original position
        x = originalX;
        y = originalY;
        // Continue to the next iteration of the game loop
        continue;
        }


        defenderX += defenderDirection; // Update the x-position based on the direction
        distanceMoved++;
        if (distanceMoved >= 100) //make defender move distance of side to side
        {
            defenderDirection = -defenderDirection; // Reverse
            distanceMoved = 0; // Reset
        }

        // Clear the previous DEFENDER position
        fillRectangle(defenderX - defenderDirection, Screen_Height / 2, 20, 20, 0);
        // Redraw the DEFENDER in its new position
        putImage(defenderX, Screen_Height / 2, 20, 20, DEFENDER, 0, 0);

        delay(20); //delay to control the speed of the DEFENDER movement
    }
   
    return 0;
}
void initSysTick(void)
